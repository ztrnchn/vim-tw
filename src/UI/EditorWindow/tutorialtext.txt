
************************************************

     Welcome to vim with training wheels!

************************************************

This editor will help you getting to know basic 
vim functionality in a training environment. 

************************************************

# How to use this Tutorial
      
Use  the keys h,j,k,l to move around like:

             k
             ^
         h <-+-> l
             v 
             j

We will take a closer look at movement later.

You can try out the commands here and later in 
the editor.

This tutorial will focus especially on the 
systematic behind the commands.

************************************************
************************************************

# Modality
Vim is a modal editor. 
This means the keybindings depend on the mode you 
are currently in.

************************************************

## Normalmode
command : "ESC"
As the startingpoint in normalmode keyboard input 
is written to the command-line below.
Commands are directly executed if valid.

The training wheels help you see the commandline.

While in vim an "i" will always start insert mode,
With training wheels the command needs to be the 
only string on the command-line to be valid. 



************************************************

## Insertmode
command : "i"
For writing new text insertmode is needed. 
The focus lies on the text and it can be directly
edited. There are more commands to start insertmode
command: "a" start insert mode one behind the cursor
command: "A" start insert mode at the end of the line

Use "Esc" to get back to Normalmode.

************************************************

## Visualmode
command : "v"
Some commands require a selection as input. In 
Visualmode the selections are visual. For example to
be sure that you delete the next two words in 
visualmode the selection can be made in visual mode
to then use a command on it.

Selections use the same keybindings as movements.

************************************************

## Commandmode
command ":"
Exit the editor, save the file or toggle help all
need commandmode. 

Commands will only be executed after using ENTER.

In vim commandmode is mostly invisible. The wheels 
help you see it. There are also other commands in 
vim not starting with ":" but the training wheels 
don't support those commands.  

Use "Esc" to clear the commandline and get back 
to Normal mode

************************************************
************************************************

# Direct Commands

Some commands don't need further input. But they 
can be repeated.

┌───────┐   ┌─────────┐
│ count │ + │ command │
└───────┘   └─────────┘

For example use "7j" to execute "j" 7 times.
Most commands can be used more efficiently like 
this.

************************************************
************************************************

# Operator Commands 

Some commands need further input like a motion.

┌───────┐   ┌─────────┐   ┌────────┐
│ count │ + │ command │ + │ motion │ 
└───────┘   └─────────┘   └────────┘

For example "y", yank, which copies the selection
to a clipboard.


************************************************
************************************************

That's it for the main concept. 

1. Keybindings depend on the mode you are in.

2. Commands can be used like buildingblocks for 
   more efficient usage.

Let's move on to the different commands.
Many of them can be remembered by the first 
letter of a verb describing their action.
************************************************
************************************************

#Command-line commands

Let's first look on how you can exit the editor 
and safe the file.

":w" -> write to file which means saving it

":q" -> quit the program

":wq" -> write to file than quit the program

************************************************
************************************************

# Movement or Selection

             k
             ^
         h <-+-> l
             v 
             j

As shown before the above keys are used to move 
around, but we can even be more efficient:

"b" -> move to the begin of the word 
       instead of "h" moving left by character
       we can move left by word.

"e" -> move to end of word.
       move to the right by word
    
"0" -> move to the begin of the line

"$" -> move to the end of the line

Movements can also be used as motions for
commands and as selections in visual mode.

************************************************
************************************************

# Meet your new best Friend

Before you edit this tutorials text by mistake, 
take a look at a vim-beginners best friend

                       
          ****   ****      
       ***   ** **   ***   
      **       *       **  
      *                 *  
      **      undo     **  
        **           **    
          ***     ***      
             ** **         
               *   

"u" -> undo last edit
"Ctrl-r" -> redo the undo

Whatever happens undo is there to take you back
to the good old times.

************************************************
************************************************

# Edit some text

"x" -> delete the current character and save it 
       to the clipboard
"p" -> put the clipboard contents after the cursor

"d" + motion -> delete the selected and save it 
                to the clipboard
"dd"  -> delete the whole line

"y" + motion -> yank the selected, which means 
                saving it to the clipboard

"yy" -> yank the whole line


************************************************
************************************************

Unfortunately the training wheels don't support 
all vim commands and functionality, but hopefully
they helped you get some comfort with using modes
and only the keyboard for editing text.

************************************************
************************************************
 
